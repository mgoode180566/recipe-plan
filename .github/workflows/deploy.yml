name: Deploy to AWS Elastic Beanstalk

on:
  push:
    branches:
      - main  # Deploy only when pushing to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up JDK (You can use Corretto or Temurin based on your preference)
      - name: Set Up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'  # You chose 'corretto', so we keep this
          java-version: '17'

      # Step 3: Build with Maven
      - name: Build with Maven
        run: mvn clean package -DskipTests  # Skipping tests for faster build (optional)

      - name: Install AWS CLI v2
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update  # Force update of existing AWS CLI installation


      # Step 5: Deploy to Elastic Beanstalk
      - name: Deploy to AWS Elastic Beanstalk
        run: |
          # Zip the application JAR file
          ls target/*.*
          zip -r deploy.zip target/*.jar  

          # Upload application version to Elastic Beanstalk S3 bucket
          aws s3 cp deploy.zip s3://s3-recipe-planner/deploy.zip
          

          # Create a new Elastic Beanstalk application version
          aws elasticbeanstalk create-application-version \
            --application-name my-springboot-app \
            --version-label v${{ github.run_number }} \
            --source-bundle S3Bucket="my-eb-bucket",S3Key="deploy.zip" \
            --region us-east-1

          # Update the environment to use the newly created version
          aws elasticbeanstalk update-environment \
            --application-name my-springboot-app \
            --environment-name my-springboot-env \
            --version-label v${{ github.run_number }} \
            --region us-east-1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
